global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal

snippet latex "minimal latex" b
\documentclass{article}
\usepackage[margin=0.7in]{geometry}
\usepackage[parfill]{parskip}
\usepackage[utf8]{inputenc}
\usepackage{amsmath,amssymb,amsfonts,amsthm}

\title{$1}
\author{Rugved Pund}
\begin{document}
\maketitle

$0

\end{document}
endsnippet

snippet beg "begin{} / end{}" b
\begin{$1}
	$2
\end{$1}
endsnippet

snippet ii "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dd "Math" wA

\begin{align}
$1
\end{align}
$0
endsnippet

context "math()"
snippet _ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet ^ "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet sum "sum" iA
\\sum_{$1}^{$2}$0
endsnippet

context "math()"
snippet '(\\?\w+)bf' "boldface" riA
\mathbf{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\\?\w+)vec' "vec" riA
\vec{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\\?\w+)tilde' "tilde" riA
\tilde{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\\?\w+)bar' "bar" riA
\bar{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\\?\w+)hat' "hat" riA
\hat{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\\?\w+)dot' "dot" riA
\dot{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet // "fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet lr{ "{}" iA
\\left{$1\\right}$0
endsnippet

context "math()"
snippet lr[ "[]" iA
\\left[$1\\right]$0
endsnippet

context "math()"
snippet lr( "()" iA
\\left($1\\right)$0
endsnippet

context "math()"
snippet { "{}" iA
{$1}$0
endsnippet

context "math()"
snippet [ "[]" iA
[$1]$0
endsnippet

context "math()"
snippet ( "()" iA
($1)$0
endsnippet

snippet ' "singlequotes" A
'$1'$0
endsnippet

snippet " "doublequotes" A
"$1"$0
endsnippet

context "math()"
snippet HH "mathcal H" iA
\\mathcal{H}$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\\mathcal{$1}$0
endsnippet

context "math()"
snippet in "belongs to" A
\\in$0
endsnippet

context "math()"
snippet mbb "mathbb" iA
\\mathbb{$1}$0
endsnippet

context "math()"
snippet xx "times" A
\\times$0
endsnippet

context "math()"
snippet .. "cdot" A
\\cdot$0
endsnippet


## Greek letters

context "math()"
snippet ;a "\\alpha" iA
\\alpha$0
endsnippet

context "math()"
snippet ;A "\\Alpha" iA
\\Alpha$0
endsnippet

context "math()"
snippet ;b "\\beta" iA
\\beta$0
endsnippet

context "math()"
snippet ;ga "\\gamma" iA
\\gamma$0
endsnippet

context "math()"
snippet ;Ga "\\Gamma" iA
\\Gamma$0
endsnippet

context "math()"
snippet ;d "\\delta" iA
\\delta$0
endsnippet

context "math()"
snippet ;D "\\Delta" iA
\\Delta$0
endsnippet

context "math()"
snippet ;E "\\epsilon" iA
\\epsilon$0
endsnippet

context "math()"
snippet :E "\\varepsilon" iA
\\varepsilon$0
endsnippet

context "math()"
snippet ;Z "\\zeta" iA
\\zeta\\zeta$0
endsnippet

context "math()"
snippet ;th "\\Theta" iA
\\theta$0
endsnippet
# {trigger: ";T", replacement: "\\Theta", options: "iA"},

context "math()"
snippet ;k "\\kappa" iA
\\kappa$0
endsnippet
# {trigger: "@k", replacement: "\\kappa", options: "iA"},

context "math()"
snippet ;K "\\Kappa" iA
\\Kappa$0
endsnippet
# {trigger: "@K", replacement: "\\kappa", options: "iA"},

context "math()"
snippet ;l "\\lambda" iA
\\lambda
endsnippet
# {trigger: "@l", replacement: "\\lambda", options: "iA"},

context "math()"
snippet ;L "\\Lambda" iA
\\Lambda
endsnippet
# {trigger: "@L", replacement: "\\Lambda", options: "iA"},

context "math()"
snippet ;m "\\mu" iA
\\mu
endsnippet
# {trigger: "@m", replacement: "\\mu", options: "iA"},

context "math()"
snippet ;M "\\mu" iA
\\Mu
endsnippet
# {trigger: "@M", replacement: "\\mu", options: "iA"},

context "math()"
snippet ;r "\\rho" iA
\\rho
endsnippet
# {trigger: "@r", replacement: "\\rho", options: "iA"},

context "math()"
snippet ;R "\\rho" iA
\\Rho
endsnippet
# {trigger: "@R", replacement: "\\rho", options: "iA"},

context "math()"
snippet ;s "\\sigma" iA
\\sigma
endsnippet
# {trigger: "@s", replacement: "\\sigma", options: "iA"},

context "math()"
snippet ;S "\\Sigma" iA
\\Sigma
endsnippet
# {trigger: "@S", replacement: "\\Sigma", options: "iA"},

context "math()"
snippet ;o "\\omega" iA
\\omega
endsnippet
# {trigger: "ome", replacement: "\\omega", options: "iA"},

context "math()"
snippet ;O "\\Omega" iA
\\Omega
endsnippet
# {trigger: "@O", replacement: "\\Omega", options: "iA"},

context "math()"
snippet ;u "\\upsilon" iA
\\upsilon
endsnippet
# {trigger: "@u", replacement: "\\upsilon", options: "iA"},

context "math()"
snippet ;U "\\Upsilon" iA
\\Upsilon
endsnippet
# {trigger: "@U", replacement: "\\Upsilon", options: "iA"},

context "math()"
snippet ;ta "\\tau" iA
\\tau
endsnippet

context "math()"
snippet ;pa "\\partial" iA
\\partial
endsnippet

context "math()"
snippet ;gr "\\grad nabla" iA
\\nabla
endsnippet

context "math()"
snippet ;Ps "\\Psi" iA
\\Psi
endsnippet

context "math()"
snippet ;ps "\\psi" iA
\\psi
endsnippet

context "math()"
snippet ;Ph "\\Phi" iA
\\Phi
endsnippet

context "math()"
snippet ;ph "\\phi" iA
\\phi
endsnippet

context "math()"
snippet ;pi "\\pi" iA
\\pi
endsnippet

context "math()"
snippet ;8 "\\infty" iA
\\infty
endsnippet

context "math()"
snippet deg "degree" iA
^{\circ}
endsnippet

































